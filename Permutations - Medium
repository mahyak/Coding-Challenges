from collections import deque
class Solution(object):
    def permute(self, nums):
        """
        :type nums: List[int]
        :rtype: List[List[int]]
        """
        if len(nums) <= 1:
            return [nums]
        ans = []
        q = deque([([], nums)])
        
        while q:
            arr, options = q.popleft()
            
            for i in range(len(options)):
                next_options = options[:i]+options[i+1:]
                new_arr = arr + [options[i]]
                
                if next_options:
                    q.append((new_arr, next_options))
                else:
                    ans.append(new_arr)
        return ans
